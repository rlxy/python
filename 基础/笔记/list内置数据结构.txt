内置数据结构
 list  set  dict  tuple
        list（列表）
	   一组有顺序的数据的组成	
	    列表的访问
          	  	    使用下标操作（索引）   （下表是列表中数字的顺序）
            		   列表的位置都是从0开始      （第一个数字的下表是0，第二个是1，第三个是2.。。。以此类推）
	     分片操作
		对列表进行任意一段的截取,注意：截取范围，包含左边的下标值，不包含右边的下标值



		列表名[:]   比如需要截取‘L’列表中第3到第9个数字    则    L[2:10	]
		下标值可以为空，如果不写，左边下标值默认为0，右边下标值为最大数加一，表示截取到最后一个数据	
		    分片可以控制增长幅度，默认增长幅度为1
			下表可以超出范围，超出后不再考虑多余下表内容
			例如  print（l（1:6:2））   打印出l列表第2个数字到第6个数字，每次增长的幅度为2，(每次打印前一次打印的后面第二位数字)
		     	下表值增长的幅度可以为负数
			为负数表明顺序是从右往左
			规定：数组最后一个数字的下标是-1
			下面的表示是空，默认分片总是从左向右截取
			正常情况下，分片左边的值一定小于右边的值
		分片操作是生成一个新的list
			内置函数id，负责显示一个变量或者数据的唯一确定编号
			分片还是使用的同一份数据
插入：
	append	列表.append(100)     在列表末尾插入一个100的元素
	insert	列表.insert(3,99)	在第三个位置插入99元素	
删除命令：
	clear	
	del         del 数列[第几个数字]          这里删除是直接在数列里面删除，不会删除后重新生成列表
	remove	列表.remove(需要删除的元素)	  如果元素不存在列表则会报错
	pop	新列表 = 旧列表.pop	    拿出旧列表中的最后一个元素拿出来放到另一个新列表中

列表相加     直接列表名相加赋值给另一个新变量       c = a + b + d     c是新变量，其余三个都是原有的列表
列表相乘      列表名*n   生成一个新的列表，列表里面就是n个原列表	


 传值和传地址的区别
	对于简单的数值，采用传值操作，即在函数内对参数的操作不影响外面的变量
	对于复杂变量，采用传地址操作，此时函数内的参数何外部变量是同一份内容，任何地方对此内容的更改都影响另外的变量或参数的使用








